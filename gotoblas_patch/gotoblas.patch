diff -u -r ../GotoBLAS2_org//common.h ./common.h
--- ../GotoBLAS2_org//common.h	2010-11-05 14:56:22.000000000 +0100
+++ ./common.h	2011-02-16 10:22:24.982506674 +0100
@@ -410,6 +410,7 @@
 #endif
 
 void goto_set_num_threads(int);
+void caldgemm_goto_reserve_cpus(int);
 
 void gotoblas_affinity_init(void);
 void gotoblas_affinity_quit(void);
diff -u -r ../GotoBLAS2_org//common_thread.h ./common_thread.h
--- ../GotoBLAS2_org//common_thread.h	2010-11-05 14:57:49.000000000 +0100
+++ ./common_thread.h	2011-02-16 10:22:24.983506808 +0100
@@ -47,6 +47,7 @@
 
 /* Global Parameter */
 extern int blas_cpu_number;
+extern int caldgemm_reserve_cpus;
 extern int blas_num_threads;
 extern int blas_omp_linked;
 
diff -u -r ../GotoBLAS2_org//driver/others/blas_server.c ./driver/others/blas_server.c
--- ../GotoBLAS2_org//driver/others/blas_server.c	2010-11-05 14:57:49.000000000 +0100
+++ ./driver/others/blas_server.c	2011-02-16 10:23:31.079506212 +0100
@@ -42,6 +42,10 @@
 #include <sys/resource.h>
 #endif
 
+//#define SMP_DEBUG
+
+#define MAX_CPUS 256
+
 #ifdef SMP_SERVER
 
 #undef MONITOR
@@ -69,6 +73,8 @@
 static unsigned long server_lock       = 0;
 #endif
 
+extern int cpu_mapping[MAX_CPUS];
+
 #define THREAD_STATUS_SLEEP		2
 #define THREAD_STATUS_WAKEUP		4
 
@@ -564,9 +570,9 @@
       /* Node Mapping Mode */
 
       if (queue -> mode & BLAS_NODE) {
-
 	do {
-	  while((thread_status[i].node != node || thread_status[i].queue) && (i < blas_num_threads - 1)) i ++;
+	  while((i < blas_num_threads - 1) && (thread_status[i].node != node || thread_status[i].queue || cpu_mapping[i + 1] < caldgemm_reserve_cpus) ) i ++;
+	  
 	  
 	  if (i < blas_num_threads - 1) break;
 
@@ -578,19 +584,26 @@
 	  }
 
 	} while (1);
+#ifdef SMP_DEBUG
+	printf("Running on CPU with id %d\n", cpu_mapping[i + 1]);
+#endif
 
       } else {
-	while(thread_status[i].queue) {
+	while(thread_status[i].queue || i < caldgemm_reserve_cpus) {
+#ifdef SMP_DEBUG
+		if (i < caldgemm_reserve_cpus) printf("Ommiting thread %d\n", i);
+#endif
 	  i ++;
 	  if (i >= blas_num_threads - 1) i = 0;
 	}
       }
 #else
-      while(thread_status[i].queue) {
+      while(thread_status[i].queue || i < caldgemm_reserve_cpus) {
 	i ++;
 	if (i >= blas_num_threads - 1) i = 0;
       }
 #endif
+
       
       queue -> assigned = i;
       WMB;
@@ -758,6 +771,10 @@
 
 }
 
+void caldgemm_goto_reserve_cpus(int num_cpus) {
+    caldgemm_reserve_cpus = num_cpus;
+};
+
 /* Compatible function with pthread_create / join */
 
 int gotoblas_pthread(int numthreads, void *function, void *args, int stride) {
diff -u -r ../GotoBLAS2_org//driver/others/init.c ./driver/others/init.c
--- ../GotoBLAS2_org//driver/others/init.c	2010-11-05 14:57:49.000000000 +0100
+++ ./driver/others/init.c	2011-02-16 10:22:24.989515440 +0100
@@ -80,7 +80,7 @@
 
 static cpu_set_t cpu_orig_mask[4];
 
-static int  cpu_mapping[MAX_CPUS];
+int cpu_mapping[MAX_CPUS];
 static int  node_mapping[MAX_CPUS * 4];
 static int  cpu_sub_mapping[MAX_CPUS];
 static int  disable_mapping;
@@ -383,7 +383,7 @@
     fprintf(stderr, "Node mask = %lx\n", lnodemask);
 #endif
     
-    my_set_mempolicy(MPOL_INTERLEAVE, &lnodemask, sizeof(lnodemask) * 8);
+    //my_set_mempolicy(MPOL_INTERLEAVE, &lnodemask, sizeof(lnodemask) * 8);
 
     numnodes = popcount(lnodemask);
   }
@@ -441,7 +441,7 @@
 
   int cpu, id, mapping;
 
-  cpu = 0;
+  cpu = common->final_num_procs - 1;
   mapping = 0;
 
   do {
@@ -460,9 +460,9 @@
       mapping ++;
     }
 
-    cpu ++;
+    cpu --;
     
-  } while ((mapping < numprocs) && (cpu < common -> final_num_procs));
+  } while ((mapping < numprocs) && (cpu >= 0));
   
   disable_mapping = 0;
 
@@ -486,7 +486,7 @@
 int get_num_nodes(void)  { return numnodes; }
 int get_node_equal(void) { 
 
-  return (((blas_cpu_number % numnodes) == 0) && node_equal);
+  return (((blas_cpu_number % numnodes) == 0) && node_equal && caldgemm_reserve_cpus == 0);
   
 }
 
diff -u -r ../GotoBLAS2_org//driver/others/memory.c ./driver/others/memory.c
--- ../GotoBLAS2_org//driver/others/memory.c	2010-11-05 14:57:49.000000000 +0100
+++ ./driver/others/memory.c	2011-02-16 10:25:02.899506907 +0100
@@ -174,6 +174,7 @@
 #endif
 
 int blas_cpu_number  = 0;
+int caldgemm_reserve_cpus = 0;
 int blas_num_threads = 0;
 
 int  goto_get_num_procs  (void) {
@@ -912,7 +913,9 @@
 
       while ((func != NULL) && (map_address == (void *) -1)) {
 
-	map_address = (*func)((void *)base_address);
+      LOCK_COMMAND(&alloc_lock);
+      map_address = (*func)((void *)base_address);
+      UNLOCK_COMMAND(&alloc_lock);
 
 #ifdef ALLOC_DEVICEDRIVER
 	if ((*func ==  alloc_devicedirver) && (map_address == (void *)-1)) {
diff -u -r ../GotoBLAS2_org//Makefile.rule ./Makefile.rule
--- ../GotoBLAS2_org//Makefile.rule	2010-02-05 17:02:04.000000000 +0100
+++ ./Makefile.rule	2011-02-16 10:25:37.357506615 +0100
@@ -59,6 +59,9 @@
 # If you want to disable CPU/Memory affinity on Linux.
 # NO_AFFINITY = 1
 
+# Do not set the memory policy to interleaving automatically
+NO_MEMPOLICY = 1
+
 # If you would like to know minute performance report of GotoBLAS.
 # FUNCTION_PROFILE = 1
 
diff -u -r ../GotoBLAS2_org//Makefile.system ./Makefile.system
--- ../GotoBLAS2_org//Makefile.system	2010-01-28 21:11:08.000000000 +0100
+++ ./Makefile.system	2011-02-16 10:22:24.991642328 +0100
@@ -570,6 +570,10 @@
 endif
 endif
 
+ifdef NO_MEMPOLICY
+CCOMMON_OPT    += -DNO_MEMPOLICY
+endif
+
 ifdef NO_AFFINITY
 CCOMMON_OPT	+= -DNO_AFFINITY
 endif
