diff -u -r ../gotoblas_org/GotoBLAS2//common.h GotoBLAS2//common.h
--- ../gotoblas_org/GotoBLAS2//common.h	2010-11-05 14:56:22.000000000 +0100
+++ GotoBLAS2//common.h	2011-02-16 10:22:24.000000000 +0100
@@ -410,6 +410,7 @@
 #endif
 
 void goto_set_num_threads(int);
+void caldgemm_goto_reserve_cpus(int);
 
 void gotoblas_affinity_init(void);
 void gotoblas_affinity_quit(void);
diff -u -r ../gotoblas_org/GotoBLAS2//common_thread.h GotoBLAS2//common_thread.h
--- ../gotoblas_org/GotoBLAS2//common_thread.h	2010-11-05 14:57:49.000000000 +0100
+++ GotoBLAS2//common_thread.h	2011-02-16 10:22:24.000000000 +0100
@@ -47,6 +47,7 @@
 
 /* Global Parameter */
 extern int blas_cpu_number;
+extern int caldgemm_reserve_cpus;
 extern int blas_num_threads;
 extern int blas_omp_linked;
 
diff -u -r ../gotoblas_org/GotoBLAS2//driver/others/blas_server.c GotoBLAS2//driver/others/blas_server.c
--- ../gotoblas_org/GotoBLAS2//driver/others/blas_server.c	2010-11-05 14:57:49.000000000 +0100
+++ GotoBLAS2//driver/others/blas_server.c	2011-02-16 10:23:31.000000000 +0100
@@ -42,6 +42,10 @@
 #include <sys/resource.h>
 #endif
 
+//#define SMP_DEBUG
+
+#define MAX_CPUS 256
+
 #ifdef SMP_SERVER
 
 #undef MONITOR
@@ -69,6 +73,8 @@
 static unsigned long server_lock       = 0;
 #endif
 
+extern int cpu_mapping[MAX_CPUS];
+
 #define THREAD_STATUS_SLEEP		2
 #define THREAD_STATUS_WAKEUP		4
 
@@ -564,9 +570,9 @@
       /* Node Mapping Mode */
 
       if (queue -> mode & BLAS_NODE) {
-
 	do {
-	  while((thread_status[i].node != node || thread_status[i].queue) && (i < blas_num_threads - 1)) i ++;
+	  while((i < blas_num_threads - 1) && (thread_status[i].node != node || thread_status[i].queue || cpu_mapping[i + 1] < caldgemm_reserve_cpus) ) i ++;
+	  
 	  
 	  if (i < blas_num_threads - 1) break;
 
@@ -578,19 +584,26 @@
 	  }
 
 	} while (1);
+#ifdef SMP_DEBUG
+	printf("Running on CPU with id %d\n", cpu_mapping[i + 1]);
+#endif
 
       } else {
-	while(thread_status[i].queue) {
+	while(thread_status[i].queue || i < caldgemm_reserve_cpus) {
+#ifdef SMP_DEBUG
+		if (i < caldgemm_reserve_cpus) printf("Ommiting thread %d\n", i);
+#endif
 	  i ++;
 	  if (i >= blas_num_threads - 1) i = 0;
 	}
       }
 #else
-      while(thread_status[i].queue) {
+      while(thread_status[i].queue || i < caldgemm_reserve_cpus) {
 	i ++;
 	if (i >= blas_num_threads - 1) i = 0;
       }
 #endif
+
       
       queue -> assigned = i;
       WMB;
@@ -758,6 +771,10 @@
 
 }
 
+void caldgemm_goto_reserve_cpus(int num_cpus) {
+    caldgemm_reserve_cpus = num_cpus;
+};
+
 /* Compatible function with pthread_create / join */
 
 int gotoblas_pthread(int numthreads, void *function, void *args, int stride) {
diff -u -r ../gotoblas_org/GotoBLAS2//driver/others/init.c GotoBLAS2//driver/others/init.c
--- ../gotoblas_org/GotoBLAS2//driver/others/init.c	2010-11-05 14:57:49.000000000 +0100
+++ GotoBLAS2//driver/others/init.c	2011-03-04 08:14:17.691710317 +0100
@@ -70,17 +70,17 @@
   int num_nodes;
   int num_procs;
   int final_num_procs;
-  unsigned long avail;
+  unsigned long long int avail;
   
   unsigned long cpu_info   [MAX_CPUS];
-  unsigned long node_info  [MAX_NODES];
+  unsigned long long int node_info  [MAX_NODES];
   int cpu_use[MAX_CPUS];
 
 } shm_t;
 
 static cpu_set_t cpu_orig_mask[4];
 
-static int  cpu_mapping[MAX_CPUS];
+int cpu_mapping[MAX_CPUS];
 static int  node_mapping[MAX_CPUS * 4];
 static int  cpu_sub_mapping[MAX_CPUS];
 static int  disable_mapping;
@@ -93,7 +93,8 @@
 static int shmid, pshmid;
 static void *paddr;
 
-static unsigned long lprocmask, lnodemask;
+static unsigned long long int lprocmask;
+static unsigned long lnodemask;
 static int numprocs = 1;
 static int numnodes = 1;
 
@@ -139,12 +140,12 @@
   return count;
 }
 
-static inline unsigned long get_cpumap(int node) {
+static inline unsigned long long int get_cpumap(int node) {
 
   int infile;
-  unsigned long affinity;
+  unsigned long long int affinity;
   char name[160];
-  char *p, *dummy;
+  char *p, *pp, *dummy;
   
   sprintf(name, CPUMAP_NAME, node);
   
@@ -154,24 +155,37 @@
     
   if (infile != -1) {
     
-    read(infile, name, sizeof(name));
+    name[read(infile, name, sizeof(name))] = 0;
    
     p = name;
 
+    p[128] = NULL;
     while ((*p == '0') || (*p == ',')) p++;
+    pp = p;
+    pp++;
+    while (*pp != ',' && *pp != 0) pp++;
+    if (*pp == ',')
+    {
+	do
+	{
+	    *pp = *(pp + 1);
+	    pp++;
+	} while (*pp != 0);
+    }
+    
 
-    affinity = strtol(p, &dummy, 16);
-   
+    affinity = strtoll(p, &dummy, 16);
+    
     close(infile);
   }
 
   return affinity;
 }
 
-static inline unsigned long get_share(int cpu, int level) {
+static inline unsigned long long int get_share(int cpu, int level) {
 
   int infile;
-  unsigned long affinity;
+  unsigned long long int affinity;
   char name[160];
   char *p;
   
@@ -179,7 +193,7 @@
   
   infile = open(name, O_RDONLY);
 
-  affinity = (1UL << cpu);
+  affinity = (((unsigned long long int) 1) << cpu);
     
   if (infile != -1) {
     
@@ -189,7 +203,7 @@
 
     while ((*p == '0') || (*p == ',')) p++;
 
-    affinity = strtol(p, &p, 16);
+    affinity = strtoll(p, &p, 16);
    
     close(infile);
   }
@@ -238,7 +252,7 @@
   fprintf(stderr, "Numa found : number of Nodes = %2d\n", common -> num_nodes);
 
   for (node = 0; node < common -> num_nodes; node ++)
-    fprintf(stderr, "MASK (%2d) : %08lx\n", node, common -> node_info[node]);
+    fprintf(stderr, "MASK (%2d) : %08llx\n", node, common -> node_info[node]);
 #endif
 
   return common -> num_nodes;
@@ -254,7 +268,7 @@
   for (node = 0; node < common -> num_nodes; node ++) {
     core = 0;
     for (cpu = 0; cpu < common -> num_procs; cpu ++) {
-      if (common -> node_info[node] & common -> avail & (1UL << cpu)) {
+      if (common -> node_info[node] & common -> avail & (((unsigned long long int) 1) << cpu)) {
 	common -> cpu_info[count] = WRITE_CORE(core) | WRITE_NODE(node) | WRITE_CPU(cpu);
 	count ++;
 	core ++;
@@ -311,10 +325,10 @@
 
 static void disable_hyperthread(void) {
 
-  unsigned long share;
+  unsigned long long int share;
   int cpu;
 
-  common -> avail = (1UL << common -> num_procs) - 1;
+  common -> avail = (((unsigned long long int) 1) << common -> num_procs) - 1;
 
 #ifdef DEBUG
   fprintf(stderr, "\nAvail CPUs    : %04lx.\n", common -> avail);
@@ -328,10 +342,10 @@
       
 #ifdef DEBUG
       fprintf(stderr, "Detected Hyper Threading on CPU %4x; disabled CPU %04lx.\n",
-	      cpu, share & ~(1UL << cpu));
+	      cpu, share & ~(((unsigned long long int) 1) << cpu));
 #endif
       
-      common -> avail &= ~((share & ~(1UL << cpu)));
+      common -> avail &= ~((share & ~(((unsigned long long int) 1) << cpu)));
     }
   }
 }
@@ -343,7 +357,7 @@
     fprintf(stderr, "CPU mask                  : %04lx.\n\n", *(unsigned long *)&cpu_orig_mask[0]);
 #endif
 
-  lprocmask = (1UL << common -> final_num_procs) - 1;
+  lprocmask = (((unsigned long long int) 1) << common -> final_num_procs) - 1;
 
 #ifndef USE_OPENMP
   lprocmask &= *(unsigned long *)&cpu_orig_mask[0];
@@ -383,7 +397,7 @@
     fprintf(stderr, "Node mask = %lx\n", lnodemask);
 #endif
     
-    my_set_mempolicy(MPOL_INTERLEAVE, &lnodemask, sizeof(lnodemask) * 8);
+    //my_set_mempolicy(MPOL_INTERLEAVE, &lnodemask, sizeof(lnodemask) * 8);
 
     numnodes = popcount(lnodemask);
   }
@@ -441,7 +455,7 @@
 
   int cpu, id, mapping;
 
-  cpu = 0;
+  cpu = common->final_num_procs - 1;
   mapping = 0;
 
   do {
@@ -451,7 +465,7 @@
       if (is_dead(id)) common -> cpu_use[cpu] = 0;
     }
 
-    if ((common -> cpu_use[cpu] == 0) && (lprocmask & (1UL << cpu))) {
+    if ((common -> cpu_use[cpu] == 0) && (lprocmask & (((unsigned long long int) 1) << cpu))) {
 
       common -> cpu_use[cpu] = pshmid;
       cpu_mapping[mapping] = READ_CPU(common -> cpu_info[cpu]);
@@ -460,9 +474,9 @@
       mapping ++;
     }
 
-    cpu ++;
+    cpu --;
     
-  } while ((mapping < numprocs) && (cpu < common -> final_num_procs));
+  } while ((mapping < numprocs) && (cpu >= 0));
   
   disable_mapping = 0;
 
@@ -486,7 +500,7 @@
 int get_num_nodes(void)  { return numnodes; }
 int get_node_equal(void) { 
 
-  return (((blas_cpu_number % numnodes) == 0) && node_equal);
+  return (((blas_cpu_number % numnodes) == 0) && node_equal && caldgemm_reserve_cpus == 0);
   
 }
 
diff -u -r ../gotoblas_org/GotoBLAS2//driver/others/memory.c GotoBLAS2//driver/others/memory.c
--- ../gotoblas_org/GotoBLAS2//driver/others/memory.c	2010-11-05 14:57:49.000000000 +0100
+++ GotoBLAS2//driver/others/memory.c	2011-03-04 08:13:58.312058333 +0100
@@ -37,7 +37,6 @@
 /*********************************************************************/
 
 #undef  DEBUG
-
 #include "common.h"
 
 #ifdef OS_WINDOWS
@@ -109,6 +108,11 @@
 gotoblas_t *gotoblas = NULL;
 #endif
 
+#ifdef DEBUG
+int alloc_area[NUM_BUFFERS];
+int alloc_used[NUM_BUFFERS];
+#endif
+
 #ifndef SMP
 
 #define blas_cpu_number 1
@@ -174,6 +178,7 @@
 #endif
 
 int blas_cpu_number  = 0;
+int caldgemm_reserve_cpus = 0;
 int blas_num_threads = 0;
 
 int  goto_get_num_procs  (void) {
@@ -912,7 +917,9 @@
 
       while ((func != NULL) && (map_address == (void *) -1)) {
 
-	map_address = (*func)((void *)base_address);
+      LOCK_COMMAND(&alloc_lock);
+      map_address = (*func)((void *)base_address);
+      UNLOCK_COMMAND(&alloc_lock);
 
 #ifdef ALLOC_DEVICEDRIVER
 	if ((*func ==  alloc_devicedirver) && (map_address == (void *)-1)) {
@@ -936,7 +943,7 @@
       }
 
 #ifdef DEBUG
-      printf("  Success -> %08lx\n", map_address);
+      printf("  Success -> %08lx\n", (unsigned long int) map_address);
 #endif
       if (((BLASLONG) map_address) == -1) base_address = 0UL;
 
diff -u -r ../gotoblas_org/GotoBLAS2//Makefile.rule GotoBLAS2//Makefile.rule
--- ../gotoblas_org/GotoBLAS2//Makefile.rule	2010-02-05 17:02:04.000000000 +0100
+++ GotoBLAS2//Makefile.rule	2011-02-16 10:25:37.000000000 +0100
@@ -59,6 +59,9 @@
 # If you want to disable CPU/Memory affinity on Linux.
 # NO_AFFINITY = 1
 
+# Do not set the memory policy to interleaving automatically
+NO_MEMPOLICY = 1
+
 # If you would like to know minute performance report of GotoBLAS.
 # FUNCTION_PROFILE = 1
 
diff -u -r ../gotoblas_org/GotoBLAS2//Makefile.system GotoBLAS2//Makefile.system
--- ../gotoblas_org/GotoBLAS2//Makefile.system	2010-01-28 21:11:08.000000000 +0100
+++ GotoBLAS2//Makefile.system	2011-02-16 10:22:24.000000000 +0100
@@ -570,6 +570,10 @@
 endif
 endif
 
+ifdef NO_MEMPOLICY
+CCOMMON_OPT    += -DNO_MEMPOLICY
+endif
+
 ifdef NO_AFFINITY
 CCOMMON_OPT	+= -DNO_AFFINITY
 endif
